bumper.cpp:		ppin3d->m_pddsBackBuffer->Blt(&pof->rc, NULL,
flipper.cpp:		//ppin3d->m_pddsBackBuffer->Blt(NULL, ppin3d->m_pddsStatic, NULL, 0, NULL);
flipper.cpp:		ppin3d->m_pddsBackBuffer->Blt(&pof->rc, NULL,
gate.cpp:		//ppin3d->m_pddsBackBuffer->Blt(NULL, ppin3d->m_pddsStatic, NULL, 0, NULL);
gate.cpp:		ppin3d->m_pddsBackBuffer->Blt(&pof->rc, NULL,
light.cpp:		ppin3d->m_pddsBackBuffer->Blt(&m_pobjframe[i]->rc, NULL,
light.cpp:	//ppin3d->m_pddsBackBuffer->Blt(NULL, ppin3d->m_pddsStatic, NULL, 0, NULL);
light.cpp:		ppin3d->m_pddsBackBuffer->Blt(&m_pobjframe[i]->rc, NULL,
pin3d.cpp:		m_pddsBackBuffer->Release();
pin3d.cpp:    m_pddsBackBuffer->GetSurfaceDesc( &ddsd );
pin3d.cpp:    m_pddsBackBuffer->GetSurfaceDesc( &ddsd );
pin3d.cpp:    if( FAILED( hr = m_pddsBackBuffer->AddAttachedSurface( m_pddsZBuffer ) ) )
plunger.cpp:		//ppin3d->m_pddsBackBuffer->Blt(NULL, ppin3d->m_pddsStatic, NULL, 0, NULL);
plunger.cpp:		ppin3d->m_pddsBackBuffer->Blt(&pof->rc, NULL,
spinner.cpp:		//ppin3d->m_pddsBackBuffer->Blt(NULL, ppin3d->m_pddsStatic, NULL, 0, NULL);
spinner.cpp:		ppin3d->m_pddsBackBuffer->Blt(&pof->rc, NULL,
surface.cpp:	//ppin3d->m_pddsBackBuffer->Blt(NULL, ppin3d->m_pddsStatic, NULL, 0, NULL);
surface.cpp:		ppin3d->m_pddsBackBuffer->Blt(&pof->rc, NULL,
